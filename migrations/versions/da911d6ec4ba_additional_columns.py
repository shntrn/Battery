"""additional columns

Revision ID: da911d6ec4ba
Revises: 
Create Date: 2020-10-19 14:05:56.840124

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'da911d6ec4ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('battery', sa.Column('capacity', sa.Integer(), nullable=True))
    op.add_column('battery', sa.Column('last_update', sa.DateTime(), nullable=True))
    op.add_column('battery', sa.Column('room', sa.String(length=32), nullable=True))
    op.alter_column('battery', 'battery_num',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text("nextval('battery_battery_num_seq'::regclass)"))
    op.create_index(op.f('ix_battery_battery_num'), 'battery', ['battery_num'], unique=True)
    op.create_index(op.f('ix_battery_last_update'), 'battery', ['last_update'], unique=False)
    op.drop_constraint('unique_battery_num', 'battery', type_='unique')
    op.alter_column('batterylog', 'capacity',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('batterylog', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index(op.f('ix_batterylog_last_update'), 'batterylog', ['last_update'], unique=False)
    op.alter_column('status', 'status_name',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('status', 'status_name',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.drop_index(op.f('ix_batterylog_last_update'), table_name='batterylog')
    op.alter_column('batterylog', 'last_update',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('batterylog', 'capacity',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_unique_constraint('unique_battery_num', 'battery', ['battery_num'])
    op.drop_index(op.f('ix_battery_last_update'), table_name='battery')
    op.drop_index(op.f('ix_battery_battery_num'), table_name='battery')
    op.alter_column('battery', 'battery_num',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text("nextval('battery_battery_num_seq'::regclass)"))
    op.drop_column('battery', 'room')
    op.drop_column('battery', 'last_update')
    op.drop_column('battery', 'capacity')
    # ### end Alembic commands ###
